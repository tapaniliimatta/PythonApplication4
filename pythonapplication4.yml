# this is an example on how to set up a continuous integration pipeline
# the pipeline runs the unit tests and code coverage and code quality and code style checks
# it is run every time a commit is pushed to the repository
# if the pipeline fails, the commit is not accepted to the repository
# if the pipeline succeeds, the commit is accepted to the repository
# the pipeline is configured in a file called .yml
# this is an example of a pipeline configuration file
# name of the pipeline
name: PythonApplication4
# on what branch the pipeline is run
on:
  push:
    branches: [ master ]
# jobs to run in the pipeline
jobs:
  build:
    # what kind of operating system is used
    runs-on: ubuntu-latest
    # what steps are run in the job
    steps:
      # what kind of action is run
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest --cov=. --cov-report=xml
